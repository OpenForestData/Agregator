image: python:3.6-slim-buster

variables:
    PRODUCTION: "False"
    BACKEND_CMS_URL: "http://localhost:9999"
    DATAVERSE_URL: "http://192.168.1.241:8080"
    SOLR_COLLECTION_URL: "http://192.168.1.241:8985/solr/collection1"
    DATAVERSE_KEY: "9c9d2213-482d-405d-9490-96b984b96898"
    DATASET_DETAILS_MAX_RESULTS_AMOUNT: "5"
    IMG_PROXY_URL: "http://localhost:8889"
    IMG_PROXY_SALT: "9860b57da2fc4f46fe8c46e171155046"
    IMG_PROXY_KEY: "dc493ad6c9ea84b33a4f240664c35e31"
    REDIS_HOST: "localhost"
    REDIS_PORT: "6379"
    REDIS_BD: "0"
    REDIS_PASSWORD: "gQNhn3k3dh"

stages:
    - code checks
    - documentation
    - tests
    - sonarqube
    - build


before_script:
    - apt update
    - apt install git python3-dev libpq-dev libsasl2-dev build-essential gcc -y
    - pip install -U pip
    - pip install --ignore-installed -r requirements.txt

sonarqube:
    image: sonarsource/sonar-scanner-cli
    stage: sonarqube
    before_script: []
    script:
        - sonar-scanner -Dsonar.projectKey=agregator -Dsonar.sources=. -Dsonar.host.url=https://sonarqube.whiteaster.com -Dsonar.login=9d043276577f7d44af007b3ef2d612a647c452cf      
    dependencies:
        - test
    only:
        - master
    needs:
        - test


Sphinx documentation development:
  stage: documentation
  script:
    - pip install sphinx sphinx_rtd_theme sphinx-autodoc-typehints sphinxcontrib.httpdomain
    - cd docs/
    - make html
  artifacts:
    paths:
        - _build/html
    expire_in: 3 day
  only:
    - branches
  except:
    - master

Sphinx documentation:
  stage: documentation
  script:
    - pip install sphinx sphinx_rtd_theme sphinx-autodoc-typehints sphinxcontrib.httpdomain
    - cd docs/
    - make html
  artifacts:
    paths:
      - _build/html
    expire_in: 30 day
  only:
    - master

PyLint:
    stage: code checks
    allow_failure: true
    script:
        - pip install pylint pylint_django
        - pylint --rcfile ./.pylintrc api core agregator_ofd agregator_repository backend_cms_repository cache_manager data_consistency_checker dataverse_client dataverse_repository img_proxy_client

Flake8:
    stage: code checks
    before_script:
        - echo "pass"    
    script:
        - apt update && apt install git -y
        - pip install flake8
        - flake8 .

Piprot:
    stage: code checks
    allow_failure: true
    script:
        - pip install piprot
        - piprot

PipCheck:
    stage: code checks
    allow_failure: true
    script:
        - pip check

Safety:
    stage: code checks
    allow_failure: true
    script:
        - pip install safety
        - safety check -r requirements.txt

test:
    stage: tests
    allow_failure: true
    script:
        - apt-get update
        - apt-get install -y --no-install-recommends gcc git build-essential libsasl2-dev python3-dev libldap2-dev libssl-dev ldap-utils
        - pip install -r requirements.txt
        - pip install pytest pytest-cov pytest-pythonpath pytest-django
        - pytest --cov-report term-missing --cov-report xml:cov.xml --cov
    coverage: /^TOTAL.*\s+(\d+\%)$/
    artifacts:
        paths:
            - cov.xml
        expire_in: 1h
    needs:
        - Flake8

Build docker dev image:
    image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    before_script: []
    stage: build
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_BRANCH
    except:
        - master

Build docker master image:
    image: 
        name: gcr.io/kaniko-project/executor:debug
        entrypoint: [""]
    before_script: []
    stage: build
    script:
        - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"gitlab-ci-token\",\"password\":\"$CI_JOB_TOKEN\"}}}" > /kaniko/.docker/config.json
        - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG --destination $CI_REGISTRY_IMAGE:latest
    only:
        - master
